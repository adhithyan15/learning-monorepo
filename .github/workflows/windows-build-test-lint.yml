name: Windows Build Test Lint
run-name: Building and Testing changes on Windows ðŸš€

on: [push]

jobs:
  Windows-Build-Test-Lint:
    runs-on: windows-latest

    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "ðŸªŸ This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "ðŸ”Ž The branch is ${{ github.ref }} from ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Ruby with DevKit
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3

      - name: Install dependencies and run recursive build
        shell: pwsh
        run: |
          # --------------------------
          # Install dev tools
          # --------------------------
          go version
          choco install rust -y
          choco install llvm -y
          clang -v
          choco install mingw -y
          gcc --version
          choco install erlang -y
          choco install gnucobol -y
          choco install strawberryperl -y
          choco install haskell-dev -y
          choco install openjdk -y
          choco install zig -y
          dotnet --help
          choco install lua -y
          choco install r -y
          gem install rspec
          npm install -g typescript
          irm https://deno.land/install.ps1 | iex
          npm install -g bun
          cmake --version

          # --------------------------
          # Set up MSVC environment dynamically
          # --------------------------
          $vsPath = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" `
              -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 `
              -property installationPath

          $vsDevCmd = Join-Path $vsPath "Common7\Tools\vsdevcmd.bat"
          Write-Host "ðŸ›  Using MSVC environment from: $vsDevCmd"

          # Run vsdevcmd.bat and capture the full environment
          $envDump = & cmd /c "`"$vsDevCmd`" -arch=x64 -host_arch=x64 >nul && set"

          # Apply all environment variables to current PowerShell session
          $envDump | ForEach-Object {
            $name, $value = $_ -split '=', 2
            if ($name -and $value) {
              [System.Environment]::SetEnvironmentVariable($name, $value, "Process")
            }
          }

          # Verify PATH includes expected Visual Studio paths
          Write-Host "âœ… PATH includes:"
          $env:PATH -split ';' | Where-Object { $_ -match "Microsoft Visual Studio" } | ForEach-Object { Write-Host "`t$_" }

          # Confirm cl.exe is available
          Write-Host "ðŸ§ª Running: cl.exe /? (sanity check)"
          & cl.exe /?

          # --------------------------
          # Run monorepo build system
          # --------------------------
          ruby code\programs\ruby\monorepo_build\build.rb
