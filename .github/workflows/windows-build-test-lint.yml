name: Windows Build Test Lint
run-name: Building and Testing changes on Windows 🚀
on: [push]
jobs:
  Windows-Build-Test-Lint:
    runs-on: windows-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Ruby with DevKit and Bundler Cache
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: true

      # Single step for MSVC setup, All Installs, and Build
      - name: Setup MSVC, Install All Deps, and Run Build
        shell: cmd # Use cmd for the entire combined step
        run: |
          for /f "usebackq tokens=*" %%i in (`vswhere -products * -requires Microsoft.Component.MSBuild -property installationPath -latest -nologo`) do set VSPATH=%%i
          if not defined VSPATH (echo ERROR: vswhere did not find VS. & exit /b 1)
          set VCVARS_BAT="%VSPATH%\VC\Auxiliary\Build\vcvarsall.bat" 
          call %VCVARS_BAT% x64 
          where cl > nul 2>&1
          go version
          choco install rust
          refreshenv
          choco install llvm
          refreshenv
          clang -v
          choco install mingw
          refreshenv
          gcc --version
          choco install erlang
          refreshenv
          choco install gnucobol
          refreshenv
          choco install strawberryperl
          refreshenv
          choco install haskell-dev
          refreshenv
          choco install openjdk
          refreshenv
          choco install zig
          refreshenv
          dotnet --help
          choco install lua
          refreshenv
          lua -v
          choco install r
          refreshenv
          gem install rspec
          npm install -g typescript
          npm install -g deno
          npm install -g bun
          cmake --version
          ruby code\programs\ruby\monorepo_build\build.rb