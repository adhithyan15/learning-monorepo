name: Windows Build Test Lint
run-name: Building and Testing changes on Windows 🚀
on: [push]
jobs:
  Windows-Build-Test-Lint:
    runs-on: windows-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
      - run: go version
      - run: choco install rust -y
      - run: choco install llvm -y
      - run: clang -v
      - run: choco install mingw -y
      - run: gcc --version
      - run: choco install erlang -y
      - run: choco install gnucobol -y
      - run: choco install strawberryperl -y
      - run: choco install haskell-dev -y
      - run: choco install openjdk -y
      - run: choco install zig -y
      - run: dotnet --help
      - run: choco install lua -y
      - run: lua -v
      - run: choco install r -y
      - run: gem install rspec
      - run: npm install -g typescript
      - run: irm https://deno.land/install.ps1 | iex
        shell: pwsh
      - run: npm install -g bun
      - name: Run build script
        shell: cmd
        run: |
          for /f "usebackq tokens=*" %%i in (`vswhere -products * -requires Microsoft.Component.MSBuild -property installationPath -latest -nologo`) do set VSPATH=%%i
          if not defined VSPATH (
            echo ERROR: vswhere did not find VS.
            exit /b 1
          )
          echo Visual Studio path found at %VSPATH%
          set VCVARS_BAT="%VSPATH%\VC\Auxiliary\Build\vcvarsall.bat" 
          if not exist %VCVARS_BAT% (
            echo ERROR: vcvarsall.bat not found: %VCVARS_BAT%
            exit /b 1
          )
          echo Setting up MSVC environment using %VCVARS_BAT% for x64...
          call %VCVARS_BAT% x64 
          if %ERRORLEVEL% neq 0 (
            echo ERROR: vcvarsall.bat failed.
            exit /b %ERRORLEVEL% 
          )
          echo MSVC Env OK.
          echo Running build script...
          echo ==> Executing: ruby code\programs\ruby\monorepo_build\build.rb
          ruby code\programs\ruby\monorepo_build\build.rb
          if %ERRORLEVEL% neq 0 (
            echo ERROR: Build script failed with exit code %ERRORLEVEL%
            exit /b %ERRORLEVEL%
          )

          echo Build completed successfully.
          