name: Linux Build Test Lint
run-name: Building And Testing Changes In Linux 🚀
on: [push]
jobs:
  Linux-Build-Test-Lint:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - run: sudo apt update
      - name: Set-up OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5
          dune-cache: true
      - name: Install dune and project deps
        run: |
          opam install dune
      - run: go version
      - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -y 1
      - run: clang -v
      - run: gcc --version
      - run: sudo apt-get install erlang
      - run: sudo apt-get install gnucobol
      - run: curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
      - run: sudo apt-get install openjdk-17-jdk
      - run: sudo apt-get install openjdk-17-jre
      - run: sudo snap install zig --classic --beta
      - run: sudo add-apt-repository ppa:dotnet/backports
      - run: sudo apt-get update
      - run: sudo apt-get install -y dotnet-sdk-9.0
      - run: dotnet --help
      - run: sudo apt-get install r-base-core
      - run: sudo apt-get install lua5.4 liblua5.4-dev
      - run: lua -v
      - run: sudo snap install powershell --classic
      - run: sudo gem install rspec
      - run: sudo npm install -g typescript
      - run: curl -fsSL https://deno.land/x/install/install.sh | sudo DENO_INSTALL=/usr/local sh
      - run: sudo gem install bundler
      - run: npm install -g bun
      - run: ruby code/programs/ruby/monorepo_build/build.rb
